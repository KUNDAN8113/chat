{"version":3,"sources":["Message/Message.js","firebase.js","chat.jfif","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","userName","className","Card","CardContent","Typography","color","variant","component","text","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUserName","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","logo","alt","width","height","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","type","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPA2BeA,EAvBAC,sBAAW,WAAuBC,GAAS,IAA7BC,EAA4B,EAA5BA,QACnBC,EAD+C,EAAnBC,WACNF,EAAQE,SACpC,OAEI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAgBF,GAAU,cAAlD,SACA,cAACG,EAAA,EAAD,CAAMD,UAAcF,EAAS,iBAAmB,kBAAhD,SACA,cAACI,EAAA,EAAD,UACA,eACAC,EAAA,EADA,CACWC,MAAQ,QACnBC,QAAU,KACVC,UAAY,KAHZ,WAIGR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,MAJF,IAI4DF,EAAQU,iB,iBCC3DC,G,OAZGC,IAASC,cAAe,CACxCC,OAAQ,0CACRC,WAAY,kCACZC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGMC,a,QCdV,MAA0B,kC,0BC8E1BC,MAnEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOrB,EAAP,KAAgB0B,EAAhB,KA2BA,OAbAC,qBAAU,WACZlB,EAAGmB,WAAW,YACbC,QAAQ,YAAY,QACpBC,YAAW,SAAAC,GACVN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAI,CAACC,GAAID,EAAIC,GAAIrC,QAASoC,EAAIE,iBAE5D,IAGFT,qBAAU,WACRD,EAAYW,OAAO,sBACnB,IAGD,sBAAKpC,UAAU,MAAf,UAGE,0CAAaD,KACb,qBAAKsC,IAAKC,EAAMC,IAAK,OAAQC,MAAM,MAAMC,OAAO,QAChD,wDACA,sBAAMzC,UAAU,YAAhB,SAEA,eAAC0C,EAAA,EAAD,CAAa1C,UAAU,mBAAvB,UAEA,cAAC2C,EAAA,EAAD,CAAO3C,UAAU,aAAa4C,YAAY,gBAAgBC,MAAOxB,EAAOyB,SAAU,SAAAC,GAAK,OAAIzB,EAASyB,EAAMC,OAAOH,UAEjH,cAACI,EAAA,EAAD,CAAYjD,UAAU,kBAAkBkD,UAAW7B,EAAOjB,MAAM,UAAUC,QAAQ,YAAY8C,KAAK,SAASC,QArC5F,SAACL,GACnBA,EAAMM,iBACN7C,EAAGmB,WAAW,YAAY2B,IAAI,CAC5B/C,KAAKc,EACLtB,SAASA,EACTwD,UAAU9C,IAASS,UAAUsC,WAAWC,oBAGxCnC,EAAS,KA6BT,SAAkI,cAAC,IAAD,WAQxI,cAAC,IAAD,UAGEC,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAGrC,EAAL,EAAKA,QAAL,OAEX,aADA,CACC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCqC,YCvDHwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e0239873.chunk.js","sourcesContent":["import { Typography, Card, CardContent } from '@mui/material';\r\nimport React,{forwardRef} from 'react';\r\nimport './message.css';\r\n\r\nconst Message= forwardRef(({ message, userName },ref) => {\r\n    const isUser = userName === message.userName;\r\n    return (\r\n\r\n        <div ref={ref} className = { `message ${isUser && \"mess__user\"}` }>\r\n        <Card className = { isUser ? \"mess__userCard\" : \"mess__guestCard\" }>\r\n        <CardContent>\r\n        <\r\n        Typography color = \"black\"\r\n        variant = \"h5\"\r\n        component = \"h2\" >\r\n        { !isUser && `${message.userName || 'Unknown User' }: ` } { message.text } \r\n        </Typography> \r\n        </CardContent> \r\n        </Card> \r\n       </div>\r\n\r\n\r\n\r\n\r\n    )\r\n})\r\n\r\nexport default Message;\r\n","import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\n\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseApp = firebase.initializeApp( {\r\n    apiKey: \"AIzaSyCvzWNjzXqcLUvmxXnw_JbXZ4elFe6wuKA\",\r\n    authDomain: \"messenger-4b8f2.firebaseapp.com\",\r\n    projectId: \"messenger-4b8f2\",\r\n    storageBucket: \"messenger-4b8f2.appspot.com\",\r\n    messagingSenderId: \"701561666961\",\r\n    appId: \"1:701561666961:web:52779d9a230435e2ad2e30\",\r\n    measurementId: \"G-9BBTLZPYJ1\"\r\n  });\r\n\r\n  const db = firebaseApp.firestore();\r\n\r\n  export default db;\r\n ","export default __webpack_public_path__ + \"static/media/chat.f1ec2d99.jfif\";","import React, {useState,useEffect} from 'react';\nimport {FormControl,Input} from '@mui/material';\nimport './App.css';\nimport Message from './Message/Message';\nimport db from './firebase';\nimport firebase from 'firebase/app';\nimport FlipMove from 'react-flip-move';\nimport logo from './chat.jfif';\nimport SendIcon from \"@mui/icons-material/Send\";\nimport { IconButton } from '@mui/material';\n\nfunction App() {\n  const [input,setInput]= useState('');\n  const [messages,setMessages]= useState([]);\n  const [userName,setUserName]= useState('');\n  \n\n  const sendmessage = (event) => {\n    event.preventDefault();\n    db.collection('messages').add({\n      text:input,\n      userName:userName,\n      timestamp:firebase.firestore.FieldValue.serverTimestamp()\n    })\n     \n      setInput('');\n  }\n\n  useEffect(() => {\ndb.collection('messages')\n.orderBy('timestamp','desc')\n.onSnapshot(snapshot => {\n  setMessages(snapshot.docs.map(doc =>({id: doc.id, message: doc.data()}) ))\n});\n  }, [])\n\n\n   useEffect(() => {\n     setUserName(prompt('Enter your name'))\n   },[])\n\n  return (\n    <div className=\"App\">\n    \n      \n      <h2>Welcome {userName}</h2>\n      <img src={logo} alt={\"logo\"} width=\"100\" height=\"100\"/>\n      <h1>Let those beeps fly...</h1>\n      <form className=\"app__form\">\n\n      <FormControl className=\"app__formControl\">\n     \n      <Input className=\"app__input\" placeholder='Type here....' value={input} onChange={event => setInput(event.target.value)} />\n     \n      <IconButton className=\"app__iconButton\" disabled={!input} color=\"primary\" variant=\"contained\" type=\"submit\" onClick={sendmessage}><SendIcon /></IconButton>\n\n      </FormControl>\n\n \n      \n      </form>\n     \n<FlipMove>\n{\n  // eslint-disable-next-line array-callback-return\n  messages.map(({id,message}) => (\n    // eslint-disable-next-line react/jsx-no-undef\n    <Message key={id} userName={userName} message={message} />\n   \n  ))\n}\n</FlipMove>\n     \n\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}